name: Manual AWS Deployment and Testing

on:
  workflow_dispatch:
    inputs:
      private_key:
        description: 'Private key (PEM) for infra/priv.pem'
        required: true
      AWS_ACCESS_KEY_ID:
        description: 'key id to access your aws instance'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'secret key'
        required: true
      AWS_SESSION_TOKEN:
        description: 'the token for your running session'
        required: true

jobs:
  deploy-and-provision:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mask all secrets
        # if you're bored, think of a way to loop through this
        run: |
          echo "::add-mask::${{ github.event.inputs.private_key }}"
          echo "::add-mask::${{ github.event.inputs.AWS_ACCESS_KEY_ID }}"
          echo "::add-mask::${{ github.event.inputs.AWS_SECRET_ACCESS_KEY }}"
          echo "::add-mask::${{ github.event.inputs.AWS_SESSION_TOKEN }}"

      - name: Write private key to infra/priv.pem
        run: |
          echo "${{ github.event.inputs.private_key }}" > infra/priv.pem
          chmod 400 infra/priv.pem

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Install Ansible
        uses: alex-oleshkevich/setup-ansible@v1.0.1
        with:
          version: "11.6.0"

      - name: Create EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ github.event.inputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ github.event.inputs.AWS_SESSION_TOKEN }}
        run: |
          cd infra
          make deploy

      - name: Provision EC2
        # TODO: you still need to create the local token.yml file for ansible!
        run: |
          cd infra
          make ansible
