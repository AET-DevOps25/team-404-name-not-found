services:

  nginx:
    image: nginx:stable
    container_name: nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./infra/nginx/fridge.localhost.crt:/etc/nginx/certs/fridge.localhost.crt
      - ./infra/nginx/fridge.localhost.key:/etc/nginx/certs/fridge.localhost.key
    depends_on:
      users:
        condition: service_healthy
      recipes:
        condition: service_healthy
    networks:
      - web

  prometheus:
    image: prom/prometheus@sha256:9abc6cf6aea7710d163dbb28d8eeb7dc5baef01e38fa4cd146a406dd9f07f70d
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/fridge/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - web

  grafana:
    image: grafana/grafana@sha256:fe89b739a264c78f2111d68221a1d51db67135ec50885dc93b59a981a7a5d4d5
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SERVER_DOMAIN: fridge.localhost
      GF_SERVER_ROOT_URL: "https://fridge.localhost/grafana"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    volumes:
      - ./infra/fridge/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./infra/fridge/dashboardproviders.yml:/etc/grafana/provisioning/dashboards/dashboardproviders.yaml
      - ./infra/fridge/jvm.json:/var/lib/grafana/dashboards/default/jvm/jvm.json
      - ./infra/fridge/spring_boot.json:/var/lib/grafana/dashboards/default/springboot/spring_boot.json
    networks:
      - web

  postgres:
    container_name: db
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fridge
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - web

  users:
    container_name: users
    image: ghcr.io/aet-devops25/team-404-name-not-found/users:${BRANCH:-main}
    build:
      context: server
      dockerfile: users/Dockerfile
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/api/users/actuator/health"]
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 10s
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: db
      HOST: fridge.localhost
      CLIENT_ID:  Ov23liW7lTaWxDdnscNp
      CLIENT_SECRET: 12072402f08ae298d376b1b28e20823c582d8d93
    volumes:
      - ./infra/fridge/public.pem:/etc/keys/public.pem
      - ./infra/fridge/private.pem:/etc/keys/private.pem
    networks:
      - web

  recipes:
    container_name: recipes
    image: ghcr.io/aet-devops25/team-404-name-not-found/recipes:${BRANCH:-main}
    build:
      context: server
      dockerfile: recipes/Dockerfile
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/api/recipes/actuator/health"]
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 10s
    ports:
      - "8082:8080"
    depends_on:
      users:
        condition: service_healthy
    environment:
      DB_HOST: db
    networks:
      - web

  ui:
    image: ealen/echo-server:0.9.2
    container_name: ui
    ports:
      - 7070:80
    networks:
      - web

  genai:
    container_name: genai
    image: ghcr.io/aet-devops25/team-404-name-not-found/genai:${BRANCH:-main}
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8000/api/genai/v1/health" ]
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 10s
    ports:
      - "8000:8000"
    env_file:
      - genai/.env
    networks:
      - web

volumes:
  pgdata:

networks:
  web:
    driver: bridge
    name: web
