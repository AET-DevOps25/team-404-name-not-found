apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        runAsUser: 472            # Grafana runs as UID 472 by default
        runAsGroup: 472
        fsGroup: 472
        seccompProfile:
          type: RuntimeDefault    # Use default seccomp profile
      containers:
        - name: grafana
          image: grafana/grafana@sha256:fe89b739a264c78f2111d68221a1d51db67135ec50885dc93b59a981a7a5d4d5
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-creds
                  key: username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin-creds
                  key: password
            - name: GF_SERVER_DOMAIN
              value: "{{ .Values.host }}"
            - name: GF_SERVER_ROOT_URL
              value: "https://{{ .Values.host }}/grafana"
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
          volumeMounts:
            - name: datasource-volume
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards-provider
              mountPath: /etc/grafana/provisioning/dashboards
            - name: jvm-dashboards
              mountPath: /var/lib/grafana/dashboards/default/jvm
              readOnly: true
            - name: springboot-dashboards
              mountPath: /var/lib/grafana/dashboards/default/springboot
              readOnly: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
          readinessProbe:
            httpGet:
              path: /grafana/api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 3
            timeoutSeconds: 2
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: datasource-volume
          configMap:
            name: grafana-datasources
        - name: dashboards-provider
          configMap:
            name: grafana-dashboard-provider
        - name: jvm-dashboards
          configMap:
            name: jvm-grafana-dashboard
        - name: springboot-dashboards
          configMap:
            name: spring-boot-grafana-dashboard
