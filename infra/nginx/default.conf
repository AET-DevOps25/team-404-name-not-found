server {
    listen 443 ssl;
    server_name fridge.localhost;

    ssl_certificate     /etc/nginx/certs/fridge.localhost.crt;
    ssl_certificate_key /etc/nginx/certs/fridge.localhost.key;

    location /api/users {
        proxy_pass         http://users:8080;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /api/users/whoami {
        proxy_pass         http://users:8080;
        auth_request       /auth;
        auth_request_set   $user_id $upstream_http_x_user_id;
        proxy_set_header   X-User-Id $user_id;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /api/recipes {
        proxy_pass         http://recipes:8080;
        auth_request       /auth;
        auth_request_set   $user_id $upstream_http_x_user_id;
        proxy_set_header   X-User-Id $user_id;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
        send_timeout 90s;
    }

    location /api/recipes/docs {
        proxy_pass         http://recipes:8080;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /api/ingredients/v1 {
        proxy_pass         http://ingredients:8080;
        auth_request       /auth;
        auth_request_set   $user_id $upstream_http_x_user_id;
        proxy_set_header   X-User-Id $user_id;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /api/ingredients/v1/docs {
        proxy_pass         http://ingredients:8080;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /api/images/v1 {
        proxy_pass         http://images:8080;
        auth_request       /auth;
        auth_request_set   $user_id $upstream_http_x_user_id;
        proxy_set_header   X-User-Id $user_id;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
        send_timeout 90s;
    }

    location /api/images/v1/docs {
        proxy_pass         http://images:8080;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location /prometheus {
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /grafana {
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location / {
        proxy_pass http://client:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location = /auth {
        internal;
        proxy_pass http://users:8080/api/users/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header Authorization $http_authorization;
    }
}

server {
    listen 80;
    server_name fridge.localhost;

    return 301 https://$host$request_uri;
}
