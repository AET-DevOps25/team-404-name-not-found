services:

  nginx:
    image: nginx:stable
    container_name: nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/fridge.localhost.crt:/etc/nginx/certs/fridge.localhost.crt
      - ./nginx/fridge.localhost.key:/etc/nginx/certs/fridge.localhost.key
    depends_on:
      users:
        condition: service_healthy
      recipes:
        condition: service_healthy
    networks:
      - web

  postgres:
    container_name: db
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fridge
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - web

  users:
    container_name: users
    image: ghcr.io/aet-devops25/team-404-name-not-found/users:${BRANCH:-main}
    build:
      context: server
      dockerfile: users/Dockerfile
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/api/users/health"]
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 10s
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: db
    networks:
      - web

  recipes:
    container_name: recipes
    image: ghcr.io/aet-devops25/team-404-name-not-found/recipes:${BRANCH:-main}
    build:
      context: server
      dockerfile: recipes/Dockerfile
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/api/recipes/health"]
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 10s
    ports:
      - "8082:8080"
    depends_on:
      users:
        condition: service_healthy
    environment:
      DB_HOST: db
    networks:
      - web

volumes:
  pgdata:

networks:
  web:
    driver: bridge
    name: web
