/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/recipes/match": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Analyze fridge image and return recipes
         * @description Accepts a fridge photo as a file and returns a list of generated recipes based on identified ingredients.
         */
        post: operations["analyzeImage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/recipes/explore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Analyze fridge image and return recipes with a creative twist
         * @description Accepts a fridge photo as a file and returns a list of generated recipes based on identified ingredients.
         */
        post: operations["checkImage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ingredients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Analyze fridge image and return analyzed ingredients
         * @description Accepts a fridge photo as a file and returns a list of identified ingredients
         */
        post: operations["analyzeIngredients"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Ingredient: {
            name: string;
            /** Format: int32 */
            amount: number;
            /** @enum {string} */
            unit: "pcs" | "ml" | "g";
        };
        RecipeDTO: {
            id: string;
            title: string;
            description: string;
            /** @enum {string} */
            difficulty: "easy" | "medium" | "advanced";
            /** Format: int32 */
            cookingTime: number;
            instructions: string[];
            ingredients: components["schemas"]["Ingredient"][];
            neededIngredients: components["schemas"]["Ingredient"][];
            userId?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    analyzeImage: {
        parameters: {
            query: {
                /**
                 * @description Number of recipes to return
                 * @example 3
                 */
                numRecipes: number;
            };
            header?: {
                "X-User-Id"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": Record<string, never>;
            };
        };
        responses: {
            /** @description List of recipes generated from the image */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RecipeDTO"][];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RecipeDTO"][];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RecipeDTO"][];
                };
            };
        };
    };
    checkImage: {
        parameters: {
            query: {
                /**
                 * @description Number of recipes to return
                 * @example 3
                 */
                numRecipes: number;
            };
            header?: {
                "X-User-Id"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": Record<string, never>;
            };
        };
        responses: {
            /** @description List of recipes generated from the image */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RecipeDTO"][];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RecipeDTO"][];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["RecipeDTO"][];
                };
            };
        };
    };
    analyzeIngredients: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": Record<string, never>;
            };
        };
        responses: {
            /** @description Good */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Ingredient"][];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Ingredient"][];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Ingredient"][];
                };
            };
        };
    };
}
